/*
 * ManeuverPanel.java
 * =====================================================================
 * Copyright (C) 2009 Shawn E. Gano
 * 
 * This file is part of JSatTrak.
 * 
 * JSatTrak is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * JSatTrak is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with JSatTrak.  If not, see <http://www.gnu.org/licenses/>.
 * =====================================================================
 *
 * Created on January 14, 2008, 1:16 PM
 */

package jsattrak.customsat.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

import jsattrak.customsat.ManeuverNode;

/**
 * 
 * @author sgano
 */
public class ManeuverPanel extends javax.swing.JPanel {

	ManeuverNode mNode;

	// used for diaplying settings panel
	private JInternalFrame iframe; // used to know what its parent frame is - to
									// close window

	/** Creates new form ManeuverPanel */
	public ManeuverPanel(ManeuverNode mNode, JInternalFrame iframe) {
		this.iframe = iframe;
		this.mNode = mNode;

		initComponents();

		// set tet fields
		double[] vnc = mNode.getVncThrustVector();
		xTextField.setText(vnc[0] + "");
		yTextField.setText(vnc[1] + "");
		zTextField.setText(vnc[2] + "");

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		okButton = new javax.swing.JButton();
		addButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		applyButton = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		yTextField = new javax.swing.JTextField();
		xTextField = new javax.swing.JTextField();
		zTextField = new javax.swing.JTextField();

		eventsComboBox = new javax.swing.JComboBox();
		jLabelEvents = new javax.swing.JLabel();
		jPanelEvent = new javax.swing.JPanel();
		jLabelEvent1 = new javax.swing.JLabel();
		jLabelEvent2 = new javax.swing.JLabel();
		jLabelEvent3 = new javax.swing.JLabel();
		eventTextField1 = new javax.swing.JTextField();
		eventTextField2 = new javax.swing.JTextField();
		eventTextField3 = new javax.swing.JTextField();
		totalEclipseEventRadioButton = new javax.swing.JRadioButton();
		penumbraEclipseEventRadioButton = new javax.swing.JRadioButton();
		bodyComboBox = new javax.swing.JComboBox();

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
		jLabel1.setText("Impulse Maneuver Thrust Vector [m/s]");

		okButton.setText("Ok");
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		applyButton.setText("Apply");
		applyButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				applyButtonActionPerformed(evt);
			}
		});

		addButton.setText("Add");
		addButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addButtonActionPerformed(evt);
			}
		});

		jLabel2.setText("X (Along Velocity):");

		jLabel3.setText("Y (Normal, out of plane):");

		jLabel4.setText("Z (Co-normal): ");

		jLabel5.setText("VNC Frame (Velocity/Normal/Co-normal):");

		yTextField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				yTextFieldActionPerformed(evt);
			}
		});

		totalEclipseEventRadioButton.setSelected(true);
		totalEclipseEventRadioButton.setText("Total eclipse detection"); // NOI18N
		totalEclipseEventRadioButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						totalEclipseRadioButtonActionPerformed(evt);
					}
				});

		penumbraEclipseEventRadioButton.setText("Penumbra detection"); // NOI18N
		penumbraEclipseEventRadioButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						penumbraEclipseRadioButtonActionPerformed(evt);
					}
				});

		jLabelEvents.setText("Type of event:");

		jLabelEvent1.setText("Body to align");

		jLabelEvent2.setText("Align angle");

		jLabelEvent3.setText("Altitude value");

		jLabelEvent3.setVisible(false);

		eventTextField3.setVisible(false);

		totalEclipseEventRadioButton.setVisible(false);
		penumbraEclipseEventRadioButton.setVisible(false);

		bodyComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Earth", "Moon", "Sun" }));

		bodyComboBox.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});

		eventsComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Alignment", "Altitude", "Apparent Elevation",
						"Apside", "Circular field of view", "Date",
						"Diheral field of view", "Eclipse", "Elevation",
						"Ground mask elevation", "Node" }));

		eventsComboBox.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

				eventActionPerformed();

			}
		});

		javax.swing.GroupLayout jPanelEventLayout = new javax.swing.GroupLayout(
				jPanelEvent);
		jPanelEvent.setLayout(jPanelEventLayout);
		jPanelEventLayout
				.setHorizontalGroup(jPanelEventLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanelEventLayout
										.createSequentialGroup()
										.addGroup(
												jPanelEventLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jLabelEvent1)
														.addComponent(
																jLabelEvent2)
														.addComponent(
																jLabelEvent3))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)

										.addGroup(

												jPanelEventLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)

														.addComponent(
																eventTextField1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																121,
																Short.MAX_VALUE)
														.addComponent(
																eventTextField2,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																121,
																Short.MAX_VALUE)
														.addComponent(
																eventTextField3,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																121,
																Short.MAX_VALUE)
														.addComponent(
																bodyComboBox,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																121,
																Short.MAX_VALUE)

														.addGroup(
																jPanelEventLayout
																		.createSequentialGroup()

																		.addComponent(
																				totalEclipseEventRadioButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				penumbraEclipseEventRadioButton)))

						).addGap(146, 146, 146));
		jPanelEventLayout
				.setVerticalGroup(jPanelEventLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanelEventLayout
										.createSequentialGroup()
										.addGroup(
												jPanelEventLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabelEvent1)
														.addComponent(
																eventTextField1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelEventLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabelEvent2)
														.addComponent(
																eventTextField2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelEventLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabelEvent3)
														.addComponent(
																eventTextField3,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(bodyComboBox,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(
												jPanelEventLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)

														.addComponent(
																totalEclipseEventRadioButton)
														.addComponent(
																penumbraEclipseEventRadioButton))));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(110, Short.MAX_VALUE)
								.addComponent(okButton)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(cancelButton)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(applyButton))
				.addGroup(
						layout.createSequentialGroup().addContainerGap()
								.addComponent(jLabel1)
								.addContainerGap(47, Short.MAX_VALUE))
				.addGroup(
						layout.createSequentialGroup().addContainerGap()
								.addComponent(jLabel5)
								.addContainerGap(90, Short.MAX_VALUE))
				.addGroup(
						layout.createSequentialGroup().addContainerGap()
								.addComponent(jPanelEvent)
								.addContainerGap(90, Short.MAX_VALUE))
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabelEvents))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														eventsComboBox,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(addButton).addGap(0, 0, 0))
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel3)
												.addComponent(jLabel2)
												.addComponent(jLabel4))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														zTextField,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														121, Short.MAX_VALUE)
												.addComponent(
														xTextField,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														121, Short.MAX_VALUE)
												.addComponent(
														yTextField,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														121, Short.MAX_VALUE))
								.addGap(0, 0, 0)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel1)
								.addGap(1, 1, 1)
								.addComponent(jLabel5)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2)
												.addComponent(
														xTextField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3)
												.addComponent(
														yTextField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel4)
												.addComponent(
														zTextField,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										26, Short.MAX_VALUE)

								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabelEvents)
												.addComponent(
														eventsComboBox,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														addButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										26, Short.MAX_VALUE)

								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jPanelEvent))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										26, Short.MAX_VALUE)

								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(applyButton)
												.addComponent(cancelButton)
												.addComponent(okButton))));
	}// </editor-fold>//GEN-END:initComponents

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_okButtonActionPerformed
	{// GEN-HEADEREND:event_okButtonActionPerformed
		boolean success = saveSettings();

		// close internal frame
		if (success) {
			try {
				iframe.dispose(); // could setClosed(true)
			} catch (Exception e) {
			}
		}
	}// GEN-LAST:event_okButtonActionPerformed

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_okButtonActionPerformed
	{// GEN-HEADEREND:event_okButtonActionPerformed
		boolean success = saveSettings();

		// close internal frame
		if (success) {
			try {
				iframe.dispose(); // could setClosed(true)
			} catch (Exception e) {
			}
		}
	}// GEN-LAST:event_okButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_cancelButtonActionPerformed
	{// GEN-HEADEREND:event_cancelButtonActionPerformed
		// close internal frame
		try {
			iframe.dispose(); // could setClosed(true)
		} catch (Exception e) {
		}
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void applyButtonActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_applyButtonActionPerformed
	{// GEN-HEADEREND:event_applyButtonActionPerformed
		saveSettings();
	}// GEN-LAST:event_applyButtonActionPerformed

	private void yTextFieldActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_yTextFieldActionPerformed
	{// GEN-HEADEREND:event_yTextFieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_yTextFieldActionPerformed

	private void totalEclipseRadioButtonActionPerformed(
			java.awt.event.ActionEvent evt)// GEN-FIRST:event_eciRadioButtonActionPerformed
	{// GEN-HEADEREND:event_eciRadioButtonActionPerformed
		totalEclipseEventRadioButton.setSelected(true);
		penumbraEclipseEventRadioButton.setSelected(false);
	}// GEN-LAST:event_eciRadioButtonActionPerformed

	private void penumbraEclipseRadioButtonActionPerformed(
			java.awt.event.ActionEvent evt)// GEN-FIRST:event_ecefRadioButtonActionPerformed
	{// GEN-HEADEREND:event_ecefRadioButtonActionPerformed
		totalEclipseEventRadioButton.setSelected(false);
		penumbraEclipseEventRadioButton.setSelected(true);
	}// GEN-LAST:event_ecefRadioButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton applyButton;
	private javax.swing.JButton cancelButton;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JButton okButton;
	private javax.swing.JTextField xTextField;
	private javax.swing.JTextField yTextField;
	private javax.swing.JTextField zTextField;

	private javax.swing.JLabel jLabelEvents;
	private javax.swing.JComboBox eventsComboBox;
	private javax.swing.JButton addButton;
	private javax.swing.JPanel jPanelEvent;
	private javax.swing.JLabel jLabelEvent1;
	private javax.swing.JLabel jLabelEvent2;
	private javax.swing.JLabel jLabelEvent3;
	private javax.swing.JTextField eventTextField1;
	private javax.swing.JTextField eventTextField2;
	private javax.swing.JTextField eventTextField3;
	private javax.swing.JRadioButton totalEclipseEventRadioButton;
	private javax.swing.JRadioButton penumbraEclipseEventRadioButton;
	private javax.swing.JComboBox bodyComboBox;

	// End of variables declaration//GEN-END:variables

	private void eventActionPerformed() {
		switch (eventsComboBox.getSelectedIndex()) {

		// Alignment detector
		case 0:

			jLabelEvent1.setText("Body to align");

			jLabelEvent2.setText("Align angle");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(true);

			eventTextField2.setVisible(true);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);
			
			bodyComboBox.setVisible(true);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Altitude detector
		case 1:
			jLabelEvent1.setText("Altitude Value");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(false);

			eventTextField2.setVisible(false);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Apparent Elevation detector
		case 2:
			jLabelEvent1.setText("Elevation Value");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(false);

			eventTextField2.setVisible(false);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Apside detector
		case 3:
			jLabelEvent1.setText("Body to align");

			jLabelEvent2.setText("Align angle");

			jLabelEvent3.setText("Altitude value");

			jLabelEvent1.setVisible(false);

			eventTextField1.setVisible(false);

			jLabelEvent2.setVisible(false);

			eventTextField2.setVisible(false);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Circular field of view detector
		case 4:
			jLabelEvent1.setText("Max Interval");

			jLabelEvent2.setText("Center Direction");

			jLabelEvent3.setText("Half Aperture");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(true);

			eventTextField2.setVisible(true);

			jLabelEvent3.setVisible(true);

			eventTextField3.setVisible(true);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Date Detector
		case 5:
			jLabelEvent1.setText("Max check");

			jLabelEvent2.setText("Date");

			jLabelEvent3.setText("Convergence");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(true);

			eventTextField2.setVisible(true);

			jLabelEvent3.setVisible(true);

			eventTextField3.setVisible(true);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Dihedral field of view detector
		case 6:
			jLabelEvent1.setText("Max interval(sec)");

			jLabelEvent2.setText("Target");

			jLabelEvent3.setText("Center direction...");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(true);

			eventTextField2.setVisible(true);

			jLabelEvent3.setVisible(true);

			eventTextField3.setVisible(true);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Eclipse detector
		case 7:
			jLabelEvent1.setText("Radius of body occulted (rad)");

			jLabelEvent2.setText("Occulting body (sun)");

			jLabelEvent3.setText("Radius of body occulting...");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(true);

			eventTextField2.setVisible(true);

			jLabelEvent3.setVisible(true);

			eventTextField3.setVisible(true);

			totalEclipseEventRadioButton.setVisible(true);
			penumbraEclipseEventRadioButton.setVisible(true);

			break;

		// Elevation detector
		case 8:
			jLabelEvent1.setText("Elevation (rad)");

			jLabelEvent2.setText("Topocentric frame");

			jLabelEvent1.setVisible(true);

			eventTextField1.setVisible(true);

			jLabelEvent2.setVisible(false);

			eventTextField2.setVisible(false);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Ground mask elevation detector
		case 9:

			jLabelEvent1.setVisible(false);

			eventTextField1.setVisible(false);

			jLabelEvent2.setVisible(false);

			eventTextField2.setVisible(false);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		// Node detector
		case 10:

			jLabelEvent1.setVisible(false);

			eventTextField1.setVisible(false);

			jLabelEvent2.setVisible(false);

			eventTextField2.setVisible(false);

			jLabelEvent3.setVisible(false);

			eventTextField3.setVisible(false);

			totalEclipseEventRadioButton.setVisible(false);
			penumbraEclipseEventRadioButton.setVisible(false);

			break;

		}

	}

	private boolean saveSettings() {
		// save settings back to Node
		boolean saveSuccess = true;

		try {
			double[] vnc = mNode.getVncThrustVector();

			vnc[0] = Double.parseDouble(xTextField.getText());
			vnc[1] = Double.parseDouble(yTextField.getText());
			vnc[2] = Double.parseDouble(zTextField.getText());

		} catch (Exception e) {
			JOptionPane.showMessageDialog(this,
					"Date format error, check input.", "Data ERROR",
					JOptionPane.ERROR_MESSAGE);
			saveSuccess = false;
		}

		return saveSuccess;

	}

	public JInternalFrame getIframe() {
		return iframe;
	}

	public void setIframe(JInternalFrame iframe) {
		this.iframe = iframe;
	}

}
