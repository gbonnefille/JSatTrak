/*
 * Node for Custom Sat Class Mission Designer
 * =====================================================================
 *   This file is part of JSatTrak.
 *
 *   Copyright 2007-2013 Shawn E. Gano
 *   
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *   
 *       http://www.apache.org/licenses/LICENSE-2.0
 *   
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 * =====================================================================
 * 
 */
package jsattrak.customsat.gui;

import java.util.ArrayList;

import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

import jsattrak.customsat.ManeuverNode;
import jsattrak.customsat.PropagatorNode;

import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;

/**
 * 
 * @author acouanon
 */
public class ManeuverPanel extends javax.swing.JPanel {

	private static final long serialVersionUID = -3833935670263031459L;
	private ManeuverNode mNode;
	private JInternalFrame iframe;

	/**
	 * Creates new form ManoeuverPanel
	 */
	public ManeuverPanel(ManeuverNode maneuverNode, JInternalFrame iframe) {

		this.mNode = maneuverNode;
		this.iframe = iframe;

		initComponents();

		// Disable constant thrust maneuver if the numerical propagator is not
		// selected
		if (this.mNode.getCurrentSat().getMissionTree().getPropNode()
				.getPropogator() != PropagatorNode.NUMERICAL) {
			this.mNode.setManeuver(ManeuverNode.IMPULSE);
			this.jComboBoxManeuverType.setEnabled(false);
		}

		this.jComboBoxManeuverType.setSelectedIndex(this.mNode.getManeuver());

		// Initialise text fields
		this.jTextFieldDate.setText(mNode.getDateformatShort().format(
				mNode.getCurrentTimeDate().getTime()));
		this.jTextFieldDuration.setText(mNode.getDuration() + "");
		this.jTextFieldThrust.setText(mNode.getThrust() + "");
		this.jTextFieldISP2.setText(mNode.getConstantThrustIsp() + "");
		this.xTextField.setText(mNode.getDirection().getX() + "");
		this.yTextField.setText(mNode.getDirection().getY() + "");
		this.zTextField.setText(mNode.getDirection().getZ() + "");

		this.jComboBoxEventType.setSelectedItem(mNode.getEvent().value);
		this.jTextFieldX.setText(mNode.getDeltatV().getX() + "");
		this.jTextFieldY.setText(mNode.getDeltatV().getY() + "");
		this.jTextFieldZ.setText(mNode.getDeltatV().getZ() + "");
		this.jTextFieldISP.setText(mNode.getImpulseIsp() + "");

		switch (this.mNode.getManeuver()) {

		case ManeuverNode.CONSTANTTHRUST:

			this.jPanelConstantThrustManeuver.setVisible(true);
			this.jPanelImpulseManeuver.setVisible(false);

			break;

		case ManeuverNode.IMPULSE:

			jComboBoxEventType.setSelectedItem(mNode.getEvent().value);
			this.jPanelConstantThrustManeuver.setVisible(false);
			this.jPanelImpulseManeuver.setVisible(true);

			break;

		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabelManeuverNode = new javax.swing.JLabel();
		jPanelManeuverType = new javax.swing.JPanel();
		jComboBoxManeuverType = new javax.swing.JComboBox();
		jPanelConstantThrustManeuver = new javax.swing.JPanel();
		jTextFieldDate = new javax.swing.JTextField();
		jLabeDuration = new javax.swing.JLabel();
		jTextFieldDuration = new javax.swing.JTextField();
		jLabelThrust = new javax.swing.JLabel();
		jTextFieldThrust = new javax.swing.JTextField();
		jLabelISP2 = new javax.swing.JLabel();
		xTextField = new javax.swing.JTextField();
		yTextField = new javax.swing.JTextField();
		zTextField = new javax.swing.JTextField();
		jTextFieldISP2 = new javax.swing.JTextField();
		jLabelDirection = new javax.swing.JLabel();
		jLabelDate = new javax.swing.JLabel();
		jPanelImpulseManeuver = new javax.swing.JPanel();
		jComboBoxEventType = new javax.swing.JComboBox();
		jLabelDeltatV = new javax.swing.JLabel();
		jTextFieldX = new javax.swing.JTextField();
		jTextFieldY = new javax.swing.JTextField();
		jTextFieldZ = new javax.swing.JTextField();
		jLabelISP = new javax.swing.JLabel();
		jTextFieldISP = new javax.swing.JTextField();
		jLabelEventType2 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		applyButton = new javax.swing.JButton();

		jLabelManeuverNode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabelManeuverNode
				.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabelManeuverNode.setText("Maneuver node :");
		jLabelManeuverNode.setBorder(javax.swing.BorderFactory
				.createTitledBorder(""));

		jPanelManeuverType.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Maneuver type"));

		jComboBoxManeuverType
				.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
						"Constant Thrust Maneuver", "Impulse Maneuver" }));
		jComboBoxManeuverType.setMinimumSize(new java.awt.Dimension(158, 25));
		jComboBoxManeuverType.setPreferredSize(new java.awt.Dimension(158, 25));
		jComboBoxManeuverType
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jComboBoxManeuverActionPerformed(evt);
					}
				});

		javax.swing.GroupLayout jPanelManeuverTypeLayout = new javax.swing.GroupLayout(
				jPanelManeuverType);
		jPanelManeuverType.setLayout(jPanelManeuverTypeLayout);
		jPanelManeuverTypeLayout.setHorizontalGroup(jPanelManeuverTypeLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						jPanelManeuverTypeLayout
								.createSequentialGroup()
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(jComboBoxManeuverType,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(40, 40, 40)));
		jPanelManeuverTypeLayout.setVerticalGroup(jPanelManeuverTypeLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						jPanelManeuverTypeLayout
								.createSequentialGroup()
								.addContainerGap()
								.addComponent(jComboBoxManeuverType,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(15, Short.MAX_VALUE)));

		jPanelConstantThrustManeuver.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Constant thrust maneuver"));

		jLabeDuration.setText("Duration [sec] :");

		jTextFieldDuration.setMinimumSize(new java.awt.Dimension(141, 20));

		jLabelThrust.setText("Thrust [N] :");

		jTextFieldThrust.setMinimumSize(new java.awt.Dimension(141, 20));

		jLabelISP2.setText("ISP [sec] :");

		jTextFieldISP2.setMinimumSize(new java.awt.Dimension(141, 20));

		jLabelDirection.setText("Direction :");

		jLabelDate.setText("Date :");

		javax.swing.GroupLayout jPanelConstantThrustManeuverLayout = new javax.swing.GroupLayout(
				jPanelConstantThrustManeuver);
		jPanelConstantThrustManeuver
				.setLayout(jPanelConstantThrustManeuverLayout);
		jPanelConstantThrustManeuverLayout
				.setHorizontalGroup(jPanelConstantThrustManeuverLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanelConstantThrustManeuverLayout
										.createSequentialGroup()
										.addGap(20, 20, 20)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																jLabelThrust,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jLabelDate,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																61,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabeDuration,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jLabelISP2,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jLabelDirection,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addGap(18, 18, 18)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																jPanelConstantThrustManeuverLayout
																		.createSequentialGroup()
																		.addComponent(
																				xTextField,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				42,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(
																				yTextField,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				42,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(
																				zTextField,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				42,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(
																jTextFieldDate)
														.addComponent(
																jTextFieldDuration,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jTextFieldThrust,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jTextFieldISP2,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addGap(27, 27, 27)));
		jPanelConstantThrustManeuverLayout
				.setVerticalGroup(jPanelConstantThrustManeuverLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanelConstantThrustManeuverLayout
										.createSequentialGroup()
										.addGap(14, 14, 14)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextFieldDate,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabelDate))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextFieldDuration,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabeDuration))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextFieldThrust,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabelThrust))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextFieldISP2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabelISP2))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelConstantThrustManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																xTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																yTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																zTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabelDirection))
										.addContainerGap()));

		jPanelImpulseManeuver.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Impuslse maneuver"));

		jComboBoxEventType.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Apside", "Date", "Node" }));
		jComboBoxEventType.setMinimumSize(new java.awt.Dimension(158, 25));
		jComboBoxEventType.setPreferredSize(new java.awt.Dimension(158, 25));
		jComboBoxEventType
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						jComboBoxEventTypeActionPerformed(evt);
					}
				});

		jLabelDeltatV.setText("Delta V [m/s] :");
		jLabelDeltatV.setToolTipText("");

		jLabelISP.setText("ISP [sec] :");

		jTextFieldISP.setMinimumSize(new java.awt.Dimension(141, 20));

		jLabelEventType2.setText("Event type :");

		jLabel1.setText("Date :");

		javax.swing.GroupLayout jPanelImpulseManeuverLayout = new javax.swing.GroupLayout(
				jPanelImpulseManeuver);
		jPanelImpulseManeuver.setLayout(jPanelImpulseManeuverLayout);
		jPanelImpulseManeuverLayout
				.setHorizontalGroup(jPanelImpulseManeuverLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanelImpulseManeuverLayout
										.createSequentialGroup()
										.addGap(20, 20, 20)
										.addGroup(
												jPanelImpulseManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
														.addComponent(
																jLabelDeltatV,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jLabelEventType2,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																70,
																Short.MAX_VALUE)
														.addComponent(
																jLabelISP,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jLabel1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addGap(18, 18, 18)
										.addGroup(
												jPanelImpulseManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
														.addComponent(
																jComboBoxEventType,
																javax.swing.GroupLayout.Alignment.LEADING,
																0, 1,
																Short.MAX_VALUE)
														.addComponent(
																jTextField1,
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																jPanelImpulseManeuverLayout
																		.createSequentialGroup()
																		.addComponent(
																				jTextFieldX,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				42,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(
																				jTextFieldY,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				42,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(
																				jTextFieldZ,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				42,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(
																jTextFieldISP,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addContainerGap()));
		jPanelImpulseManeuverLayout
				.setVerticalGroup(jPanelImpulseManeuverLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanelImpulseManeuverLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanelImpulseManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jComboBoxEventType,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabelEventType2))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelImpulseManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextField1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel1))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelImpulseManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextFieldX,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jLabelDeltatV)
														.addComponent(
																jTextFieldY,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																jTextFieldZ,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanelImpulseManeuverLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jTextFieldISP,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabelISP))
										.addContainerGap()));

		okButton.setText("Ok");
		okButton.setMaximumSize(new java.awt.Dimension(50, 26));
		okButton.setMinimumSize(new java.awt.Dimension(50, 26));
		okButton.setPreferredSize(new java.awt.Dimension(50, 26));
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		cancelButton.setText("Cancel");
		cancelButton.setMaximumSize(new java.awt.Dimension(73, 26));
		cancelButton.setMinimumSize(new java.awt.Dimension(73, 26));
		cancelButton.setPreferredSize(new java.awt.Dimension(73, 26));
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		applyButton.setText("Apply");
		applyButton.setMaximumSize(new java.awt.Dimension(65, 26));
		applyButton.setMinimumSize(new java.awt.Dimension(65, 26));
		applyButton.setPreferredSize(new java.awt.Dimension(65, 26));
		applyButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				applyButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		okButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		cancelButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		applyButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
																.addComponent(
																		jPanelConstantThrustManeuver,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jLabelManeuverNode,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jPanelManeuverType,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jPanelImpulseManeuver,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(10, 10, 10)
								.addComponent(jLabelManeuverNode,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										25,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanelManeuverType,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanelConstantThrustManeuver,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanelImpulseManeuver,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														cancelButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														applyButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														okButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	private void jComboBoxEventTypeActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBoxEventTypeActionPerformed

		switch (EventPanel.Events.getEnum(jComboBoxEventType.getSelectedItem()
				.toString())) {
		case APSIDE:
			jLabel1.setVisible(false);
			jTextField1.setVisible(false);
			break;
		case DATE:
			jLabel1.setVisible(true);
			jTextField1.setVisible(true);
			jTextField1.setText(mNode.getDateformatShort().format(
					mNode.getCurrentTimeDate().getTime()));
			break;
		case NODE:
			jLabel1.setVisible(false);
			jTextField1.setVisible(false);
			break;
		}
	}// GEN-LAST:event_jComboBoxEventTypeActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed
		boolean success = saveSettings();

		// close internal frame
		if (success) {
			try {
				iframe.dispose(); // could setClosed(true)
			} catch (Exception e) {
			}
		}
	}// GEN-LAST:event_okButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		try {
			iframe.dispose(); // could setClosed(true)
		} catch (Exception e) {
		}
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_applyButtonActionPerformed
		saveSettings();
	}// GEN-LAST:event_applyButtonActionPerformed

	private void jComboBoxManeuverActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBoxManeuverActionPerformed

		switch (jComboBoxManeuverType.getSelectedIndex()) {

		case ManeuverNode.CONSTANTTHRUST:
			this.jPanelConstantThrustManeuver.setVisible(true);
			this.jPanelImpulseManeuver.setVisible(false);
			break;

		case ManeuverNode.IMPULSE:
			this.jPanelConstantThrustManeuver.setVisible(false);
			this.jPanelImpulseManeuver.setVisible(true);
			break;
		}
	}// GEN-LAST:event_jComboBoxManeuverActionPerformed

	public JComboBox getjComboBoxManeuverType() {
		return jComboBoxManeuverType;
	}

	private boolean saveSettings() {
		// save settings back to Node
		boolean saveSuccess = true;

		try {

			switch (this.jComboBoxManeuverType.getSelectedIndex()) {

			case ManeuverNode.CONSTANTTHRUST:

				mNode.setManeuver(ManeuverNode.CONSTANTTHRUST);

				mNode.getCurrentTimeDate().setTime(
						mNode.getDateformatShort().parse(
								jTextFieldDate.getText()));
				mNode.setDuration(Double.parseDouble(jTextFieldDuration
						.getText()));
				mNode.setThrust(Double.parseDouble(jTextFieldThrust.getText()));
				mNode.setConstantThrustIsp(Double.parseDouble(jTextFieldISP2
						.getText()));
				mNode.setDirection(new Vector3D(Double.parseDouble(xTextField
						.getText()), Double.parseDouble(yTextField.getText()),
						Double.parseDouble(zTextField.getText())));
				break;

			case ManeuverNode.IMPULSE:

				mNode.setManeuver(ManeuverNode.IMPULSE);

				switch (ManeuverPanel.Events.getEnum(jComboBoxEventType
						.getSelectedItem().toString())) {

				// Apside detector
				case APSIDE:

					mNode.setEvent(ManeuverPanel.Events.APSIDE);

					break;

				// Date Detector
				case DATE:

					mNode.getCurrentTimeDate().setTime(
							mNode.getDateformatShort().parse(
									jTextField1.getText()));

					mNode.setEvent(ManeuverPanel.Events.DATE);

					break;

				// Node detector
				case NODE:
					mNode.setEvent(ManeuverPanel.Events.NODE);

					break;

				}

				mNode.setDeltatV(new Vector3D(Double.parseDouble(jTextFieldX
						.getText()), Double.parseDouble(jTextFieldY.getText()),
						Double.parseDouble(jTextFieldZ.getText())));

				mNode.setImpulseIsp(Double.parseDouble(jTextFieldISP.getText()));

				break;

			}

		} catch (Exception e) {
			JOptionPane.showMessageDialog(this,
					"Date format error, check input.", "Data ERROR",
					JOptionPane.ERROR_MESSAGE);
			saveSuccess = false;
		}

		return saveSuccess;

	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton applyButton;
	private javax.swing.JButton cancelButton;
	private javax.swing.JComboBox jComboBoxEventType;
	private javax.swing.JComboBox jComboBoxManeuverType;
	private javax.swing.JLabel jLabeDuration;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabelDate;
	private javax.swing.JLabel jLabelDeltatV;
	private javax.swing.JLabel jLabelDirection;
	private javax.swing.JLabel jLabelEventType2;
	private javax.swing.JLabel jLabelISP;
	private javax.swing.JLabel jLabelISP2;
	private javax.swing.JLabel jLabelManeuverNode;
	private javax.swing.JLabel jLabelThrust;
	private javax.swing.JPanel jPanelConstantThrustManeuver;
	private javax.swing.JPanel jPanelImpulseManeuver;
	private javax.swing.JPanel jPanelManeuverType;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextFieldDate;
	private javax.swing.JTextField jTextFieldDuration;
	private javax.swing.JTextField jTextFieldISP;
	private javax.swing.JTextField jTextFieldISP2;
	private javax.swing.JTextField jTextFieldThrust;
	private javax.swing.JTextField jTextFieldX;
	private javax.swing.JTextField jTextFieldY;
	private javax.swing.JTextField jTextFieldZ;
	private javax.swing.JButton okButton;
	private javax.swing.JTextField xTextField;
	private javax.swing.JTextField yTextField;
	private javax.swing.JTextField zTextField;

	// End of variables declaration//GEN-END:variables

	public enum Events {

		APSIDE("Apside"), DATE("Date"), NODE("Node");
		private String value;

		private Events(String event) {
			this.value = event;
		}

		public String getEvent() {
			return value;
		}

		public static Object[] getValues() {

			ArrayList<String> eventList = new ArrayList<String>();

			for (ManeuverPanel.Events e : ManeuverPanel.Events.values()) {
				eventList.add(e.value);
			}

			return eventList.toArray();
		}

		public static ManeuverPanel.Events getEnum(String value) {
			for (ManeuverPanel.Events event : values()) {
				if (event.value.equals(value)) {
					return event;
				}
			}
			return null;
		}
	}
}
